{"version":3,"file":"default-src_app_pages_profile_profile_page_ts.js","mappings":"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","sources":["./src/app/pages/profile/profile.page.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport { ProfileService } from 'src/app/services/profile/profile.service';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\nimport { LoginService } from 'src/app/services/onboarding/login.service';\nimport { Subscription } from 'rxjs';\n\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.page.html',\n  styleUrls: ['./profile.page.scss'],\n})\nexport class ProfilePage implements OnInit {\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private profileService: ProfileService,\n    private loginService: LoginService,\n    private router: Router,\n    private alertController: AlertController) {}\n  \n  \n  ngOnInit() {\n    this.initializeFormGroups();\n    this.getUserDetailsFromBehaviorSubjects();\n  }\n\n\n\n\n\n  /**\n   * Direct user to Login Page from Profile page\n   */\n  goToLoginPage() {\n    this.router.navigateByUrl('/login');\n  }\n\n\n\n\n  // // //\n  userEmail: string;\n  userFullName: string;\n  userFirstName: any;\n  userLastName: any;\n  userPicture: string;\n  userType: string;\n\n  /**\n   * Get User profile information from Behavior Subjects in Login Service\n   */\n  getUserDetailsFromBehaviorSubjects() {\n    this.loginService.userFullName.subscribe(\n      (data) => {\n        this.userFullName = data;\n        let userFullNameArray = data.split(' ');\n        this.userFirstName = userFullNameArray[0];\n        this.userLastName = userFullNameArray[1];\n      }\n    )\n    this.loginService.userEmail.subscribe(\n      (data) => {\n        this.userEmail = data;\n      }\n    )\n    this.loginService.userPicture.subscribe(\n      (data) => {\n        this.userPicture = data;\n      }\n    )\n    this.loginService.userType.subscribe(\n      (data) => {\n        this.userType = data;\n      }\n    )\n\n  }\n\n\n\n\n  // \n  changeNameForm: FormGroup;\n  changePasswordForm: FormGroup;\n  changeEmailForm: FormGroup;\n  newsLetterForm: FormGroup;\n\n\n  validationMessasges = {\n    email: [\n      { type: 'email', message: 'Must be a valid email address'}\n    ],\n    password: [\n      // tslint:disable-next-line: max-line-length\n      { type: 'password', message: 'Password must be at least 6 characters with at least one lowercase character, one uppcase character, and one number.'}\n    ]\n  };\n\n  /**\n   * Initializes all the FormBuilder groups for each Modal\n   */\n  initializeFormGroups() {\n    this.changeNameForm = this.formBuilder.group({\n      firstName: ['', [Validators.required]],\n      lastName: ['', [Validators.required]],\n      password: ['', Validators.compose([\n        Validators.minLength(8),\n        Validators.required,\n        // at least 1 number, 1 uppercase letter, and one lowercase letter\n        Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')\n     ])],\n    })\n    this.changeEmailForm = this.formBuilder.group({\n      newEmail: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.pattern]],\n    })\n    this.changePasswordForm = this.formBuilder.group({\n      oldPassword: ['', [Validators.required,  Validators.pattern]],\n      newPassword: ['', [Validators.required, Validators.pattern]],\n      retypeNewPassword: ['', [Validators.required,  Validators.pattern]],\n    })\n    this.newsLetterForm = this.formBuilder.group({\n      newsLetterCheckBox: ['', [Validators.required]],\n    })\n  }\n\n \n\n\n\n  // \n  changeNameSub: Subscription;\n  changeNameModalOpen = false;\n\n  /**\n   * Attempt to Change the User's Name\n   */\n  async tryChangeName() {\n    let fullName = this.changeNameForm.controls.firstName.value + \" \" + this.changeNameForm.controls.lastName.value;\n    let password = this.changeNameForm.controls.password.value;\n    this.changeNameSub = await this.profileService.changeName(fullName, password, this.userEmail);\n    await setTimeout(() => {\n      \n      this.changeNameSub.unsubscribe();\n      console.log('Unsubscribed from Change Name Subscription');\n    }, 1000);\n    return;\n  } \n  changeNameModal() {\n    this.changeNameModalOpen = true;\n  }\n  closeNameModal() {\n    this.changeNameModalOpen = false;\n  }\n\n\n\n\n\n  // \n  changeEmailSub: Subscription;\n  changeEmailModalOpen = false;\n\n  /**\n   * Attempt to Change the User's Email\n   */\n  async tryChangeEmail() {\n    let newEmail = this.changeEmailForm.controls.newEmail.value;\n    let password = this.changeEmailForm.controls.password.value;\n    this.changeEmailSub = await this.profileService.changeEmail(newEmail, this.userEmail, password);\n    await setTimeout(() => {\n      \n      this.changeEmailSub.unsubscribe();\n      console.log('Unsubscribed from Change Name Subscription');\n      return;\n    }, 1000);\n\n  }\n  changeEmailModal() {\n    this.changeEmailModalOpen = true;\n  }\n  closeEmailModal() {\n    this.changeEmailModalOpen = false;\n  }\n\n\n\n\n\n\n  changePasswordSub: Subscription;\n  changePasswordModalOpen = false;\n\n  /**\n   * Attempt to Change the User's Password\n   */\n  async tryChangePassword() {\n    let newPassword = this.changePasswordForm.controls.newPassword.value;\n    let oldPassword = this.changePasswordForm.controls.oldPassword.value;\n    this.changePasswordSub = await this.profileService.changePassword(newPassword, oldPassword, this.userEmail);\n    \n    await setTimeout(() => {\n      \n      this.changePasswordSub.unsubscribe();\n      console.log('Unsubscribed from Change Password Subscription');\n      return;\n    }, 1000);\n    \n  }\n  changePasswordModal() {\n    this.changePasswordModalOpen = true;\n  }\n  closePasswordModal() {\n    this.changePasswordModalOpen = false;\n  }\n\n\n  //\n  changePictureModalOpen = false;\n  changePictureSub: Subscription;\n\n  /**\n   * Attempt to change User's Picture\n   */\n  async tryChangePicture() {\n    // TODO Crop Photo\n    // let newPicture = this.changePictureForm.controls.newPassword.value;\n    // this.changePictureSub = await this.profileService.changePassword(newPassword, oldPassword, this.userEmail);\n    await setTimeout(() => {\n      \n      // this.changePictureSub.unsubscribe();\n      console.log('Unsubscribed from Change Picture Subscription');\n      return;\n    }, 1000);\n    \n  }\n  changePictureModal() {\n    this.changePictureModalOpen = true;\n  }\n  closePictureModal() {\n    this.changePictureModalOpen = false;\n  }\n\n\n\n\n  // \n  newsLetterOpen = false;\n  changeNewsLetterSub: Subscription;\n\n  /**\n   * User can unsubscribe/subscribe to newsletter.\n   */\n  tryChangeNewsLetter() {\n    // TODO\n  }\n   changeNewsLetter() {\n    this.newsLetterOpen = true;\n\n  }\n  closeNewsLetterModal() {\n    this.newsLetterOpen = false;\n  }\n\n\n\n\n\n  /**\n   * Prompt the user with an Alert, then log the user out\n   */\n   async logout() {\n\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Logout?',\n      message: 'Are you sure you want to log out?',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          id: 'cancel-button'\n        }, \n        {\n          text: 'Logout',\n          id: 'confirm-button',\n          handler: () => {\n            this.loginService.logout();\n            return;\n          }\n        }]\n    });\n\n    await alert.present();\n\n   }\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}