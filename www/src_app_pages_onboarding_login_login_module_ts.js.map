{"version":3,"file":"src_app_pages_onboarding_login_login_module_ts.js","mappings":"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","sources":["./src/app/pages/onboarding/login/login-routing.module.ts","./src/app/pages/onboarding/login/login.module.ts","./src/app/pages/onboarding/login/login.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SwiperModule } from 'swiper/angular';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    SwiperModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport { LoginService } from 'src/app/services/onboarding/login.service';\nimport { RegisterService } from 'src/app/services/onboarding/register.service';\nimport { SwiperOptions } from 'swiper';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class LoginPage implements OnInit {\n  loginForm: FormGroup;\n  forgotPasswordModal = false;\n\n  config: SwiperOptions = {\n    slidesPerView: 1,\n    spaceBetween: 20,\n    navigation: true,\n    pagination: { clickable: true },\n    scrollbar: { draggable: true },\n  };\n\n  validationMessasges = {\n    email: [\n      { type: 'email', message: 'Must be a valid email address'}\n    ],\n    password: [\n      // tslint:disable-next-line: max-line-length\n      { type: 'pattern', message: 'Password must be at least 6 characters with at least one lowercase character, one uppcase character, and one number.'}\n    ]\n  };\n  swiper: any;\n  enterEmailForm: FormGroup;\n  enterCodeForm: FormGroup;\n  newPasswordForm: FormGroup;\n  userStayLoggedIn: boolean;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private loginService: LoginService,\n    private registerService: RegisterService,\n    private router: Router,\n    private alertController: AlertController) { }\n\n  ngOnInit() {\n    this.initializeFormGroups();\n  }\n\n  /**\n   * \n   */\n  login(email, password) {\n    let user = {\n      email,\n      password\n    }\n\n    this.loginService.login(user, this.userStayLoggedIn);\n  }\n\n  stayLoggedIn(e) {\n    console.log(e.detail);\n    let checkBoxValue = e.detail;\n    if(checkBoxValue) {\n      this.userStayLoggedIn = true;\n      return;\n    } else {\n      this.userStayLoggedIn = false;\n      return;\n    }\n  }\n\n  /**\n   * \n   */\n  goToRegisterPage() {\n    this.router.navigateByUrl(\"/register\");\n    return;\n  }\n\n  /**\n   * \n   */\n  goHome() {\n    this.router.navigateByUrl(\"/home\");\n    return;\n  }\n\n  /**\n   * \n   */\n  initializeFormGroups() {\n    this.loginForm = this.formBuilder.group({\n      email: ['eddielacrosse2@gmail.com', [Validators.required, Validators.email]],\n      password: ['12345678', Validators.compose([\n        Validators.minLength(8),\n        Validators.required,\n        // at least 1 number, 1 uppercase letter, and one lowercase letter\n        // Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')\n     ])]\n    })\n\n    // Slide 1 / Enter Email\n    this.enterEmailForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n    })\n\n    // Slide 2 / Enter Code\n    this.enterCodeForm = this.formBuilder.group({\n      code: ['', [Validators.required]],\n    })\n\n    // Slide 3 / New Password\n    this.newPasswordForm = this.formBuilder.group({\n     newPassword: ['', Validators.compose([\n      Validators.minLength(8),\n      Validators.required,\n      // at least 1 number, 1 uppercase letter, and one lowercase letter\n      Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')\n   ])],\n    reTypeNewPassword: ['', Validators.compose([\n        Validators.minLength(8),\n        Validators.required,\n        // at least 1 number, 1 uppercase letter, and one lowercase letter\n        Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')\n     ])],\n    })\n  }\n\n  /**\n   * \n   */\n  showForgotPasswordModal() {\n    this.forgotPasswordModal = true;\n    return;\n  }\n\n  /**\n   * \n   */\n  closeForgotPasswordModal() {\n    this.forgotPasswordModal = false;\n    return;\n  }\n\n  /**\n   * \n   */\n  resendCode() {\n    \n  }\n\n  /**\n   * \n   */\n  onSwiper(swiper) {\n    console.log(swiper);\n    return this.swiper = swiper;\n  }\n\n  /**\n   * \n   */\n  onSlideChange() {\n  }\n\n  changeName() {\n\n  }\n\n  onSubmit() {\n    \n  }\n\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}