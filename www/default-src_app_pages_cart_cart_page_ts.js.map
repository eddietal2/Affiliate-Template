{"version":3,"file":"default-src_app_pages_cart_cart_page_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAgE;AACvB;AACQ;AACI;AACoB;AACI;IA+BhE,QAAQ,SAAR,QAAQ;IAEnB,YACU,eAAgC,EAChC,YAA0B;IAClC,6BAA6B;IACtB,eAAgC,EAC/B,MAAc;QAJd,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAc;QAE3B,oBAAe,GAAf,eAAe,CAAiB;QAC/B,WAAM,GAAN,MAAM,CAAQ;QAcxB,UAAK,GAAG,IAAI,iDAAe,CAAC,EAAE,CAAC;IAZ3B,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAGD,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;QAC5B,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;IAC7B,CAAC;IAUD;;OAEG;IACH,UAAU;QACR,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS;aACxC,SAAS,CAAC,CAAC,SAAiB,EAAE,EAAE;YAC/B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,SAAS,CAAC;iBACnD,SAAS,CAAC,CAAC,IAAoB,EAAE,EAAE;gBAClC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;oBAC5B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;oBAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;oBACjB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;oBAE9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBAClB,OAAO;gBACT,CAAC,CAAC;YACJ,CAAC,CAAC;QACN,CAAC,CAAC;IACN,CAAC;IAED;;OAEG;IACI,gBAAgB;;YACrB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC9C,QAAQ,EAAE,iBAAiB;gBAC3B,MAAM,EAAE,OAAO;gBACf,SAAS,EAAE,UAAU;gBACrB,OAAO,EAAE,2BAA2B;gBACpC,OAAO,EAAE,CAAC,IAAI,CAAC;aAChB,CAAC,CAAC;YAEH,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;YAEtB,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,KAAK,CAAC,YAAY,EAAE,CAAC;YAC5C,OAAO,CAAC,GAAG,CAAC,iCAAiC,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC;KAAA;IAEF,aAAa;QACX,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IACtC,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;IACzC,CAAC;CAEF;;YA3GQ,uFAAe;YADf,mFAAY;YAFZ,2DAAe;YADf,mDAAM;;;0BAkDZ,uDAAY,SAAC,UAAU;;AAfb,QAAQ;IALpB,wDAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,iEAA+B;;KAEhC,CAAC;GACW,QAAQ,CA4EpB;AA5EoB","sources":["./src/app/pages/cart/cart.page.ts"],"sourcesContent":["import { Component, HostListener, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { LoginService } from 'src/app/services/onboarding/login.service';\nimport { ProductsService } from 'src/app/services/products/products.service';\n\n\ninterface Product {\n  _id: string,\n  title: string,\n  description?: string,\n  category: string,\n  rating: number,\n  duration: number,\n  price: number,\n  sample: string,\n  reviews?: Array<Review>,\n}\n\ninterface Review {\n  _id: string,\n  reviewerUsername: string,\n  reviewerEmail: string,\n  reviewerProfilePicture: string,\n  date: string,\n  rating: number,\n  review: string,\n}\n\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.page.html',\n  styleUrls: ['./cart.page.scss'],\n})\nexport class CartPage implements OnInit {\n\n  constructor(\n    private ProductsService: ProductsService,\n    private loginService: LoginService,\n    // private iab: InAppBrowser,\n    public alertController: AlertController,\n    private router: Router,\n    \n  ) { }\n\n  ngOnInit() {\n    this.tryGetCart();\n  }\n  \n  @HostListener('unloaded')\n  ngOnDestroy() {\n    this.loginSub.unsubscribe();\n    this.cartSub.unsubscribe();\n  }\n\n  cart$ = new BehaviorSubject([])\n  cart;\n  loginSub: Subscription;\n  cartSub: Subscription;\n  userEmail: string;\n  cartLength: number;\n\n\n  /**\n   * Get the Cart\n   */\n  tryGetCart() {\n    this.loginSub = this.loginService.userEmail\n      .subscribe((userEmail: string) => {\n        this.cartSub = this.ProductsService.getCart(userEmail)\n          .subscribe((cart: Array<Product>) => {\n            this.cart$.next(cart);\n            this.cart$.subscribe((cart) => {\n              this.userEmail = userEmail;\n              this.cart = cart;\n              this.cartLength = cart.length;\n\n              console.log(cart);\n              return;\n            })\n          })\n      })\n  }\n\n  /**\n   * Complete Order\n   */\n   async tryCompleteOrder() {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Alert',\n      subHeader: 'Subtitle',\n      message: 'This is an alert message.',\n      buttons: ['OK']\n    });\n\n    await alert.present();\n\n    const { role } = await alert.onDidDismiss();\n    console.log('onDidDismiss resolved with role', role);\n   }\n\n  goToLoginPage() {\n    this.router.navigateByUrl('/login');\n  }\n\n  goBackToProductsPage() {\n    this.router.navigateByUrl('/products');\n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}