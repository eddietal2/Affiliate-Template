{"version":3,"file":"src_app_pages_onboarding_register_register_module_ts.js","mappings":"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","sources":["./src/app/pages/onboarding/register/register-routing.module.ts","./src/app/pages/onboarding/register/register.module.ts","./src/app/pages/onboarding/register/register.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPageRoutingModule } from './register-routing.module';\n\nimport { RegisterPage } from './register.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RegisterPageRoutingModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { LoadingController } from '@ionic/angular';\nimport { Subscription } from 'rxjs';\nimport { RegisterService } from 'src/app/services/onboarding/register.service';\n\ninterface RegisteredUSer {\n  fullName: string,\n  email: string,\n  password: string,\n}\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n  registerForm: FormGroup;\n  registerSuccessModal = false;\n\n  validationMessasges = {\n    email: [\n      { type: 'email', message: 'Must be a valid email address'}\n    ],\n    password: [\n      // tslint:disable-next-line: max-line-length\n      { type: 'pattern', message: 'Password must be at least 6 characters with at least one lowercase character, one uppcase character, and one number.'}\n    ]\n  };\n  registerSub: Subscription;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private registerService: RegisterService,\n    private loadingController: LoadingController,\n    private router: Router,\n  ) { }\n\n  ngOnInit() {\n    this.createRegisterFormBuilder();\n    this.registerForm.statusChanges.subscribe( changes => {\n      console.log(changes);\n    })\n  }\n  createRegisterFormBuilder() {\n    return this.registerForm = this.formBuilder.group({\n      firstName: ['John', [Validators.required]],\n      lastName: ['Doe', [Validators.required]],\n      email: ['eddielacrosse2@gmail.com', [Validators.required, Validators.email]],\n      password: ['12345678', Validators.compose([\n        Validators.minLength(8),\n        Validators.maxLength(8),\n        Validators.required,\n        // at least 1 number, 1 uppercase letter, and one lowercase letter\n        // Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')\n      ])],\n      reTypePassword: ['Lacrosse2', Validators.compose([\n        Validators.minLength(8),\n        Validators.maxLength(8),\n        Validators.required,\n        // at least 1 number, 1 uppercase letter, and one lowercase letter\n        // Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')\n    ])]\n    })\n  }\n\n  /**\n   * \n   */\n   goToLoginPage() {\n     this.router.navigateByUrl(\"/login\");\n   }\n\n  /**\n   * \n   */\n   async tryRegister() {\n    // Check to see if form is valid\n    // Register user\n    let registeredUser: RegisteredUSer = {\n      fullName: \n        this.registerForm.controls.firstName.value \n        + ' ' \n        + this.registerForm.controls.lastName.value,\n      email: this.registerForm.controls.email.value,\n      password: this.registerForm.controls.password.value,\n    }\n\n    this.registerSub = await this.registerService.register(registeredUser);\n    await this.showSuccessModal();\n    await this.registerSub.unsubscribe();\n\n   }\n\n  /**\n   * \n   */\n   showSuccessModal() {\n     return this.registerSuccessModal = true;\n   }\n\n  /**\n   * \n   */\n  closeSuccessModal() {\n       this.registerSuccessModal = false;\n       this.registerForm.reset();\n       this.registerSuccessNavigationLoading();\n       setTimeout(() => {\n        this.backToLoginFromSuccessModal();\n       },1000)\n       \n   }\n\n   backToLoginFromSuccessModal() {\n    this.router.navigateByUrl('/login')\n   }\n\n  async registerSuccessNavigationLoading() {\n    const loading = await this.loadingController.create({\n      cssClass: 'success-loading',\n      message: 'You should be able to Log in now!',\n      duration: 2000\n    });\n    await loading.present();\n\n    const { role, data } = await loading.onDidDismiss();\n    console.log('Loading dismissed!');\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}