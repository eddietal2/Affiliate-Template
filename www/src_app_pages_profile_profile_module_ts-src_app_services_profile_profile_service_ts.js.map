{"version":3,"file":"src_app_pages_profile_profile_module_ts-src_app_services_profile_profile_service_ts.js","mappings":"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","sources":["./src/app/pages/profile/profile.module.ts","./src/app/services/profile/profile.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfilePageRoutingModule } from './profile-routing.module';\nimport { CustomComponentsModule } from 'src/app/components/custom-compontents.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    CustomComponentsModule,\n    ProfilePageRoutingModule\n  ],\n  declarations: [],\n  entryComponents: []\n})\nexport class ProfilePageModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\nimport { LoginService } from '../onboarding/login.service';\nimport { AlertController, ToastController, LoadingController } from '@ionic/angular';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n  BACKEND_URL = environment.url;\n  TOKEN_KEY = 'access_token';\n  userEmail: string;\n\n  constructor(\n    private http: HttpClient,\n    private loginService: LoginService,\n    private alertController: AlertController,\n    private toastController: ToastController,\n    private router: Router,\n    private loadingController: LoadingController,\n    ) {}\n  \n\n  /**\n   * Change User's name\n   * @returns \n   */\n  changeName(name, password, email) {\n     console.log(name, password);\n    return this.http.post(`${this.BACKEND_URL}/user-profile/change-name`, {fullName: name, password, email})\n      .pipe(\n        // \n      )\n      .subscribe( async (response) => {\n        console.log(response);\n\n        // Create Toast\n        const toast = await this.toastController.create({\n          message: 'You have successfully changed your Name!',\n          cssClass: 'success-toast',\n          duration: 2000,\n        });\n\n        // Create Loading\n        const loading = await this.loadingController.create({\n          cssClass: 'default-loading',\n          message: 'Updating Profile ..',\n          duration: 2000\n        });\n    \n        loading.present();\n        loading.onDidDismiss()\n          .then(() => {\n            toast.present();\n            // Change Name on Profile Page\n            this.loginService.userFullName.next(name);\n            return;\n          });\n\n\n      });\n  }\n\n  /**\n   * Change User's Email\n   */\n  changeEmail(newEmail, email, password) {\n    return this.http.post(`${this.BACKEND_URL}/user-profile/change-email`, {newEmail, email, password})\n      .pipe(\n        // \n      )\n      .subscribe( async (response) => {\n        console.log(response);\n\n        // Create Toast\n        const toast = await this.toastController.create({\n          message: 'You have successfully changed your Email!',\n          cssClass: 'success-toast',\n          duration: 2000,\n        });\n\n        // Create Loading\n        const loading = await this.loadingController.create({\n          cssClass: 'default-loading',\n          message: 'Updating Profile ..',\n          duration: 2000\n        });\n    \n        loading.present();\n        loading.onDidDismiss()\n          .then(() => {\n            toast.present();\n            // Change Name on Profile Page\n            this.loginService.userEmail.next(newEmail);\n            return;\n          });\n\n\n      });\n\n  }\n\n  /**\n   * Change User's Picture\n   */\n  changePicture() {\n\n  }\n\n  /**\n   * Change User's Password\n   */\n  changePassword(newPassword, oldPassword, email) {\n    return this.http.post(`${this.BACKEND_URL}/user-profile/change-password`, {newPassword, oldPassword, email})\n      .pipe(\n        // \n      )\n      .subscribe( async (response) => {\n        console.log(response);\n\n        // Create Toast\n        const toast = await this.toastController.create({\n          message: 'You have successfully changed your Password!',\n          cssClass: 'success-toast',\n          duration: 2000,\n        });\n\n        // Create Loading\n        const loading = await this.loadingController.create({\n          cssClass: 'default-loading',\n          message: 'Updating Profile ..',\n          duration: 2000\n        });\n    \n        loading.present();\n        loading.onDidDismiss()\n          .then(() => {\n            toast.present();\n            return;\n          });\n\n\n      });\n\n  }\n\n  /**\n   * Unsubscribe From Newsletter\n   */\n  unsubscribeFromNewsLetter() {\n    \n  }\n\n  /**\n   * Subscribe to Newsletter\n   */\n  subscribeFromNewsLetter() {\n\n  }\n\n  getFavoriteProducts(email) {\n    console.log(email);\n    return this.http.post(`${this.BACKEND_URL}/user-profile/get-favorite-products`, {email})\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}